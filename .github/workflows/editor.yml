# This is a basic workflow to help you get started with Actions

name: Editor

# Controls when the workflow will run
on: 
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      branch: 'main'
      source_base_url: "https://raw.githubusercontent.com/${{ github.repository }}/main/"
      web_editor_url: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
    steps:
      - name: Checkout ${{ env.branch }} branch
        uses: actions/checkout@v2
        with:
          ref: ${{ env.branch }}
      - name: install elan
        run: |
          set -o pipefail
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- --default-toolchain none -y
          ~/.elan/bin/lean --version
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
          echo "short_lean_version=$(~/.elan/bin/lean --run scripts/lean_version.lean)" >> $GITHUB_ENV

      - name: install Python
        if: ${{ ! 0 }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: install mathlibtools
        run: python -m pip install --upgrade pip mathlibtools

      - name: leanpkg configure
        run: leanpkg configure

      - name: get mathlib cache
        run: leanproject get-mathlib-cache || true
        
      - name: leanpkg build
        id: build
        run: |
          lean --make src || true

    ## Now we generate the editor ##

      - name: Install lean editor
        run: git clone --depth=1 https://github.com/leanprover-community/lean-web-editor.git

      - name : Get server files
        run: |
          mkdir -p dist
          VER=`lean -v |sed -nE 's/.*version ([0-9]+\.[0-9]+\.[0-9]+).*/\1/pi'`
          wget -q https://github.com/leanprover-community/lean/releases/download/v$VER/lean-$VER--browser.zip
          unzip *.zip
          mv build/shell/* dist/

      - name: generate library.zip
        run: |
          # Create folder with leanpkg.toml with two dependencies.
          mkdir -p combined_lib
          cp leanpkg.toml combined_lib/
          cd combined_lib/
          sed -i 's/name.*/name = "combined_lib"/g' leanpkg.toml
          sed -i '/path/d' leanpkg.toml

          # Get last revision of code:
          LAST_COMMIT=$(git ls-remote https://github.com/ferrandf/valenceformula.git HEAD | cut -f1)
          echo "valenceformula = {git = \"https://github.com/ferrandf/valenceformula\", rev = \"$LAST_COMMIT\"}" >> leanpkg.toml

          leanproject get-mathlib-cache || true
          
          # Generate a zip in dist/library.zip
          rm -rf _target/deps/mathlib/counterexamples
          rm -rf _target/deps/mathlib/scripts
          rm -rf _target/deps/mathlib/archive
          rm -rf _target/deps/mathlib/test
          cd ..
          ./lean-web-editor/mk_library.py -i combined_lib

      - name: upload library.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: library
          path: ./dist/library.zip

      - name: upload library_meta.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: library_meta
          path: ./dist/library.*.json

      - name: build
        run: |
          mv dist lean-web-editor/
          cd lean-web-editor
          npm install
          NODE_ENV=production ./node_modules/.bin/webpack
  
      - name: place editor in the website
        run: mv lean-web-editor/dist html/
  
#      - name: build site and deploy
#        run: |
#          ./lean-web-editor/deploy.sh

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'html/'

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
